@using Microsoft.EntityFrameworkCore;
@using Microsoft.AspNetCore.Identity;
@using Data.Entitiy;
@using Data.Context;
@inject SignInManager<User> _signInManager;
@inject VacantionContext _context;
@{
    ViewData["Title"] = "Roles";
}

<h1 style="text-align:center">@ViewData["Title"]</h1>
<hr />
@{

    string[] role = { "" };
    try
    {
        var user = await _signInManager.UserManager.FindByNameAsync(User.Identity.Name);
        var tempRole = await _signInManager.UserManager.GetRolesAsync(user);
        role[0] = tempRole[0];
    }
    catch
    {

    }
    var ordered = _context.Roles.Include(u => u.UsersInRole).OrderBy(u => u.Name);
    var firstPart = ordered.Take(2);
    var secondPart = ordered.Skip(2);
}

@foreach (var part in new[] { firstPart, secondPart })
{
    <div class="container-fluid" style="margin-top: 4%">
        <div class="row">
            @foreach (var item in part)
            {
                <div class="col-sm" style="text-align:center; font-size:50px;">
                    <b>@item.UsersInRole.Count</b>
                </div>
            }
        </div>
        <div class="row">
            @foreach (var item in part)
            {
                <div class="col-sm" style="text-align:center; font-size:20px;">
                    @{ 
                        string name = item.Name;
                        if (item.UsersInRole.Count > 1 && item.Name != "Unassigned")
                        {
                            name += "s";
                        }
                    }                    
                    <a asp-action="@item.Name.Replace(" ", "")">@name</a>
                </div>
            }
        </div>
    </div>
}