@model Web.Models.Teams.TeamsCreateViewModel
@using Microsoft.AspNetCore.Identity;
@using Data.Context;
@using Data.Entitiy;
@inject VacantionContext _context;
@{
    ViewData["Title"] = "Create Team";
    Layout = "~/Views/Shared/_NoLayout.cshtml";

    var projects = _context.Projects.Select(x => x.ProjectName).ToList();
}

<h2>@ViewData["Title"]</h2>

<script type="text/javascript">
    window.onload = function () {
        for (var i = 2; i < 5; i++) {
            $("#dev" + i).hide();
            $("#btn" + i).hide();
        }
    }
</script>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="TeamName" class="control-label">Team name</label>
                <input asp-for="TeamName" class="form-control" />
                <span asp-validation-for="TeamName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Leader" class="control-label">Leader</label>
                <input asp-for="Leader" class="form-control" />
                <span asp-validation-for="Leader" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Team Members: <span style="color: grey; font-size: 11px;">(Max 5, Min 2)</span></label>
                <span asp-validation-for="Developers" class="text-danger"></span>
                <div style="display: inline-flex; margin-bottom: 1.5%;">
                    <input id="dev0" class="form-control" style="display: inline-block;"
                           placeholder="Member 1..."
                           asp-for="Developers[0]" />
                    <span asp-validation-for="Developers[0]" class="text-danger"></span>
                </div>
                @for (int i = 1; i < 5; i++)
                {
                    var devId = "dev" + i.ToString();
                    var btnId = "btn" + i.ToString();
                    <div style="display: inline-flex; margin-bottom: 1.5%;">
                        <input id="@devId" class="form-control" style="display: inline-block;"
                               placeholder="@("Member " + (i+1).ToString() + "...")"
                               asp-for="Developers[i]" />
                        <button style="display: inline-block;" id="@btnId" class="btn btn-light"
                                type="button"onclick="showMore(@i)">+</button>
                        <span asp-validation-for="Developers[i]" class="text-danger"></span>
                    </div>
                }
            </div>
            <div class="form-group">
                <label asp-for="WorkingOnProject" class="control-label">Working On Project:</label>
                <select asp-for="WorkingOnProject" class="form-control" asp-items="@(new SelectList(projects))"></select>
                <span asp-validation-for="WorkingOnProject" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script type='text/javascript'>

    function showMore(idNumber) {
        if (idNumber == 4) {
            return;
        }
        $("#btn" + idNumber).hide();
        $("#dev" + (idNumber + 1)).show();
        $("#btn" + (idNumber + 1)).show();
    }

/*    function onBlur(idNumber) {
        if ($('#dev' + idNumber).val()) {
            = idNumber;
        }
        else {
            
        }
    }*/

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>  